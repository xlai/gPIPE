% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-calibrateEpsilon.R
\name{calibrate_epsilon}
\alias{calibrate_epsilon}
\title{Calibrate Epsilon for PIPE Estimator}
\usage{
calibrate_epsilon(
  dose_configs_valid,
  epsilon_range,
  num_simulations,
  drugCombinationModel,
  drugcombi_new,
  patientDataModel,
  fdr_threshold = 0.05,
  delta = 0.2,
  user_defined_scenario = NULL,
  return_fdr_tpr = TRUE
)
}
\arguments{
\item{dose_configs_valid}{List of valid dose configurations}

\item{epsilon_range}{Numeric vector of epsilon values to test}

\item{num_simulations}{Integer number of simulations to run for each epsilon value}

\item{drugCombinationModel}{DrugCombinationModel object containing the model parameters}

\item{drugcombi_new}{DrugCombi object representing the drug combinations}

\item{patientDataModel}{PatientDataModel object for tracking patient data}

\item{fdr_threshold}{Numeric value for the maximum acceptable false discovery rate (default: 0.05)}

\item{delta}{Numeric value representing the toxicity increment for non-MTD doses (default: 0.2)}

\item{user_defined_scenario}{Optional user-defined scenario to test instead of dose_configs_valid}

\item{return_fdr_tpr}{Logical indicating whether to return FDR and TPR results (default: TRUE)}
}
\value{
A list containing:
\itemize{
\item optimal_epsilon: The optimal epsilon value that satisfies the FDR threshold
\item fdr_results: Vector of false discovery rates for each tested epsilon value
\item tpr_results: Vector of true positive rates for each tested epsilon value
}
}
\description{
This function performs a calibration process to find the optimal epsilon value
for the Product of Independent Beta Probabilities Escalation (PIPE) design.
It evaluates different epsilon values across multiple simulated trials and selects
the value that maximizes the true positive rate while maintaining the false discovery
rate below a specified threshold.
}
\details{
The function tests each epsilon value in \code{epsilon_range} by running \code{num_simulations}
trial simulations. For each simulation, it:
\enumerate{
\item Creates an adjusted probability vector based on the true dose configuration
\item Runs a simulated trial with the current epsilon value
\item Calculates the false discovery rate (FDR) and true positive rate (TPR)
}

The optimal epsilon is selected as the highest value that keeps the FDR below the
specified threshold. This balances between being conservative (lower epsilon values)
and efficient (higher true positive rates).
}
\examples{
\dontrun{
# Create required objects
drug_combo_model <- createDrugCombinationModel("config.yaml")
drug_combi <- createDrugCombi(list(Drug$new(), Drug$new()))
patient_data <- createPatientDataModel(drug_combi)
valid_configs <- list(DoseConfiguration$new(drug_combi), DoseConfiguration$new(drug_combi))

# Calibrate epsilon
calibration_results <- calibrate_epsilon(
  dose_configs_valid = valid_configs,
  epsilon_range = seq(0.1, 0.9, by = 0.1),
  num_simulations = 100,
  drugCombinationModel = drug_combo_model,
  drugcombi_new = drug_combi,
  patientDataModel = patient_data
)

# Access the optimal epsilon
optimal_epsilon <- calibration_results$optimal_epsilon
}

}
\seealso{
\code{\link{PipeEstimator}} for the class that uses epsilon in the PIPE methodology
}
